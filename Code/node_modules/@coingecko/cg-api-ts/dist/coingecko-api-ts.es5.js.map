{"version":3,"file":"coingecko-api-ts.es5.js","sources":["../lib/model/API.ts","../lib/model/type.ts","../lib/CGError.ts","../lib/utils/functions.ts","../lib/CoinGeckoAPI.ts","../lib/utils/decorators.ts"],"sourcesContent":["export enum RootAPI {\n  PROD = \"https://api.coingecko.com/api/v3\",\n  DEV = \"http://localhost:3010\",\n}\n\nexport enum APIError {\n  DOWN = \"DOWN\",\n  SERVER = \"SERVER\",\n  TIMEOUT = \"TIMEOUT\",\n  UNAUTHORIZED = \"UNAUTHORIZED\",\n}\n\nexport type APIResponse<T> = Promise<{\n  response: Response;\n  data: T;\n  endpoint: string;\n}>;\n","export interface LocalizedNames {\n  en: string;\n  es: string;\n  de: string;\n  pt: string;\n  fr: string;\n  it: string;\n  pl: string;\n  id: string;\n  zh: string;\n  \"zh-tw\": string;\n  ja: string;\n  ko: string;\n  ru: string;\n  ar: string;\n  th: string;\n  vi: string;\n  tr: string;\n  [key: string]: string;\n}\n\nexport interface Image {\n  thumb: string;\n  small: string;\n}\n\nexport interface Rates {\n  [key: string]: number;\n}\n\nexport interface Ticker {\n  base: string;\n  target: string;\n  market: {\n    name: string;\n    identifier: string;\n    logo?: string;\n  };\n  last: number;\n  converted_last?: {\n    btc: number;\n    eth: number;\n    usd: number;\n  };\n  volume: number;\n  converted_volume?: {\n    btc: number;\n    eth: number;\n    usd: number;\n  };\n  trust_score: TrustScore | null;\n  bid_ask_spread_percentage: number;\n  last_traded_at: string;\n  last_fetch_at: string;\n  trade_url: string;\n  timestamp: string;\n  is_anomaly: boolean;\n  is_stale: boolean;\n}\n\nexport interface MarketData {\n  ath: Rates;\n  ath_change_percentage: Rates;\n  ath_date: { [date: string]: string };\n  atl: Rates;\n  atl_change_percentage: Rates;\n  atl_date: { [date: string]: string };\n  market_cap_rank: number;\n  fully_diluted_valuation: Rates | {};\n  current_price: Rates;\n  market_cap: Rates;\n  total_volume: Rates;\n  high_24h: Rates;\n  low_24h: Rates;\n  price_change_percentage_1h_in_currency: Rates;\n  price_change_percentage_24h_in_currency: Rates;\n  price_change_percentage_7d_in_currency: Rates;\n  price_change_percentage_14d_in_currency: Rates;\n  price_change_percentage_30d_in_currency: Rates;\n  price_change_percentage_60d_in_currency: Rates;\n  price_change_percentage_200d_in_currency: Rates;\n  price_change_percentage_1y_in_currency: Rates;\n  market_cap_change_24h: string;\n  market_cap_change_percentage_24h: string;\n  volume_change_24h: string;\n  volume_change_percentage_24h: string;\n  circulating_supply: string;\n  total_supply: number | null;\n  total_value_locked: Rates | null;\n  mcap_to_tvl_ratio: number | null;\n  fdv_to_tvl_ratio: number | null;\n}\n\nexport interface CommunityData {\n  facebook_likes: number;\n  twitter_followers: number;\n  reddit_average_posts_48h: number;\n  reddit_average_comments_48h: number;\n  reddit_subscribers: number;\n  reddit_accounts_active_48h: number;\n}\n\nexport interface DeveloperData {\n  forks: number;\n  stars: number;\n  subscribers: number;\n  total_issues: number;\n  closed_issues: number;\n  pull_requests_merged: number;\n  pull_request_contributors: number;\n  commit_count_4_weeks: number;\n}\n\nexport interface PublicInterestStats {\n  alexa_rank: number;\n  bing_matches: number;\n}\n\nexport interface LinksData {\n  homepage: [string];\n  blockchain_site: [string];\n  official_forum_url: [string];\n  chat_url: [string];\n  announcement_url: [string];\n  twitter_screen_name: string;\n  facebook_username: string;\n  bitcointalk_thread_identifier: number;\n  telegram_channel_identifier: string;\n}\n\nexport interface BeamItem {\n  description: string;\n  category: string;\n  created_at: string;\n  user: string;\n  user_title: string;\n  pin: boolean;\n  project?: {\n    type: string;\n    id: string;\n    name: string;\n    symbol: string;\n    image: {\n      thumb: string;\n      small: string;\n      large: string;\n    };\n  };\n}\n\nexport interface DerivativesTicker {\n  symbol: string;\n  base: string;\n  target: string;\n  trade_url: string;\n  contract_type: DerivativesContractType;\n  last: number;\n  h24_percentage_change: number;\n  index: number;\n  index_basis_percentage: number;\n  bid_ask_spread: number;\n  funding_rate: number;\n  open_interest_usd: number;\n  h24_volume: number;\n  converted_volume: {\n    usd: number;\n    btc: number;\n    eth: number;\n  };\n  converted_last: {\n    usd: number;\n    btc: number;\n    eth: number;\n  };\n  last_traded: number;\n  expired_at: number | null;\n}\n\n// ENUM\n\nexport enum SortOrder {\n  NAME_ASCENDING = \"coin_name_asc\",\n  NAME_DESCENDING = \"coin_name_desc\",\n  PRICE_ASCENDING = \"price_asc\",\n  PRICE_DESCENDING = \"price_desc\",\n  PRICE_CHANGE_ASCENDING = \"h24_change_asc\",\n  PRICE_CHANGE_DESCENDING = \"h24_change_desc\",\n  PRICE_CHANGE_1H_ASCENDING = \"price_change_1h_asc\",\n  PRICE_CHANGE_1H_DESCENDING = \"price_change_1h_desc\",\n  PRICE_CHANGE_7D_ASCENDING = \"price_change_7d_asc\",\n  PRICE_CHANGE_7D_DESCENDING = \"price_change_7d_desc\",\n  MARKET_CAP_ASCENDING = \"market_cap_asc\",\n  MARKET_CAP_DESCENDING = \"market_cap_desc\",\n  VOLUME_DESC = \"volume_desc\",\n  VOLUME_ASC = \"volume_asc\",\n  RECENTLY_ADDED_DESC = \"recently_added_desc\",\n}\n\nexport enum CoinsMarketsSortOrder {\n  MARKET_CAP_DESC = \"market_cap_desc\",\n  MARKET_CAP_ASC = \"market_cap_asc\",\n  VOLUME_ASC = \"volume_asc\",\n  VOLUME_DESC = \"volume_desc\",\n}\n\nexport enum TickerSortOrder {\n  TRUST_SCORE_DESC = \"trust_score_desc\",\n  TRUST_SCORE_ASC = \"trust_score_asc\",\n  VOLUME_DESC = \"volume_desc\",\n  VOLUME_ASC = \"volume_asc\",\n}\n\nexport enum PriceChangePercentage {\n  \"1h\" = \"1h\",\n  \"24h\" = \"24h\",\n  \"7d\" = \"7d\",\n  \"14d\" = \"14d\",\n  \"30d\" = \"30d\",\n  \"200d\" = \"200d\",\n  \"1y\" = \"1y\",\n}\n\n// BEAM\n\nexport enum BeamFilterCategories {\n  ALL_CATEGORIES = \"\",\n  GENERAL = \"general\",\n  MILESTONE = \"milestone\",\n  PARTNERSHIP = \"partnership\",\n  FUND_MOVEMENT = \"fund_movement\",\n  EXCHANGE_LISTINGS = \"exchange_listing\",\n  SOFTWARE_RELEASE = \"software_release\",\n  NEW_LISTINGS = \"new_listings\",\n  EVENT = \"event\",\n}\n\nexport enum BeamFilterProjectType {\n  COIN = \"coin\",\n  MARKET = \"market\",\n  ALL = \"\",\n}\n\nexport enum ChartPeriodControlOption {\n  Option1Hour = \"1H\",\n  Option24Hour = \"24H\",\n  Option7Day = \"7D\",\n  Option14Day = \"14D\",\n  Option30Day = \"30D\",\n  Option60Day = \"60D\",\n  Option90Day = \"90D\",\n  Option1Year = \"1Y\",\n  OptionMax = \"MAX\",\n}\n\nexport enum TrustScore {\n  Green = \"green\",\n  Yellow = \"yellow\",\n  Red = \"red\",\n  Gray = \"gray\",\n}\n\nexport enum DerivativesContractType {\n  Perpetual = \"perpetual\",\n  Futures = \"futures\",\n}\n\nexport enum DerivativesExchangesSortType {\n  NAME_ASC = \"name_asc\",\n  NAME_DESC = \"name_desc\",\n  OPEN_INTEREST_BTC_ASC = \"open_interest_btc_asc\",\n  OPEN_INTEREST_BTC_DESC = \"open_interest_btc_desc\",\n  TRADE_VOLUME_BTC_ASC = \"trade_volume_24h_btc_asc\",\n  TRADE_VOLUME_BTC_DESC = \"trade_volume_24h_btc_desc\",\n}\n\nexport enum DerivativesExchangeTickerType {\n  NONE = \"\",\n  UNEXPIRED = \"unexpired\",\n  ALL = \"all\",\n}\n","import { APIError } from \"./model/API\";\n\nexport class CGError extends Error {\n  type: APIError;\n  response: Response | null;\n\n  constructor(type: APIError, response?: Response | null, ...params: any) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CGError);\n    }\n\n    this.name = \"CoinGeckoAPIError\";\n    // Custom debugging information\n    this.type = type;\n    this.response = response || null;\n  }\n}\n","import { CGError } from \"../CGError\";\nimport { APIError } from \"../model/API\";\n\n/**\n * urlEncode: Encode URL functions by passing in params\n */\nexport const urlEncode = (params: { [key: string]: any }) => {\n  return Object.keys(params)\n    .map((key) => {\n      return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n    })\n    .join(\"&\");\n};\n\n/**\n * Timeout Wrapper, timeout a Promise after certain amount of time\n */\nexport const timeoutWrapper = <T>(\n  ms: number,\n  promise: Promise<T>\n): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(\n        new CGError(APIError.TIMEOUT, null, `Request timeout after ${ms}ms`)\n      );\n    }, ms);\n    promise.then(resolve, reject);\n  });\n};\n\n/**\n * handleError, Handle Error in the app\n */\nexport const handleError = (response: Response) => {\n  if (response.status >= 500 && response.status <= 530) {\n    throw new CGError(APIError.DOWN, response, \"CoinGecko API down\");\n  } else if (!response.ok && response.status === 401) {\n    throw new CGError(APIError.UNAUTHORIZED, response, response.statusText);\n  } else if (!response.ok) {\n    throw new CGError(APIError.SERVER, response, response.statusText);\n  }\n  return response;\n};\n","import { RootAPI, APIResponse } from \"./model/API\";\nimport { ServerRequestHeader, ServerResponse } from \"./model/Server\";\nimport {\n  ICoinsId,\n  IGlobal,\n  ICoinsIdMarketChart,\n  ICoinIdStatusUpdates,\n  IPing,\n  ISimplePrice,\n  IStatusUpdates,\n  ISimpleSupportedVsCurrencies,\n  ICoinsList,\n  IExchangeRates,\n  ICoinsMarket,\n  IExchanges,\n  IExchangesListItem,\n  IExchangesId,\n  IExchangesIdTicker,\n  ICoinTickers,\n  IDerivatives,\n  IDerivativesExchanges,\n  IDerivativesExchangesId,\n  IFinanceProduct,\n  IFinancePlatform,\n  ICoinsLite,\n} from \"./model/APIResponse\";\nimport {\n  BeamFilterCategories,\n  BeamFilterProjectType,\n  SortOrder,\n  CoinsMarketsSortOrder,\n  PriceChangePercentage,\n  TickerSortOrder,\n  DerivativesExchangesSortType,\n  DerivativesExchangeTickerType,\n} from \"./model/type\";\nimport { urlEncode, timeoutWrapper, handleError } from \"./utils/functions\";\n\nexport class CoinGeckoAPI {\n  baseUrl: string;\n  fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n  timeout: number;\n  getHeader: ServerRequestHeader;\n  postHeader: ServerRequestHeader;\n\n  constructor(\n    fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>,\n    timeout = 20000,\n    baseUrl: string = RootAPI.PROD,\n    getHeader: ServerRequestHeader = {},\n    postHeader: ServerRequestHeader = {}\n  ) {\n    this.fetch = fetch;\n    this.timeout = timeout;\n    this.baseUrl = baseUrl;\n    this.getHeader = getHeader;\n    this.postHeader = postHeader;\n  }\n\n  /**\n   * Using Fetch to send GET request\n   */\n  async getReq<T>(\n    endpoint: string,\n    header: ServerRequestHeader = {}\n  ): APIResponse<T> {\n    const response = await timeoutWrapper(\n      this.timeout,\n      this.fetch(`${this.baseUrl}${endpoint}`, {\n        method: \"GET\",\n        headers: {\n          ...this.getHeader,\n          ...header,\n        },\n      })\n    );\n    handleError(response);\n    let data = null;\n    try {\n      data = await response.json();\n    } catch (_err) {\n      return {\n        response,\n        data,\n        endpoint,\n      };\n    }\n    return {\n      response,\n      data,\n      endpoint,\n    };\n  }\n\n  /**\n   * Using Fetch to send POST request\n   */\n  async postReq<T>(\n    endpoint: string,\n    body: any,\n    header: ServerRequestHeader = {}\n  ): APIResponse<T> {\n    const response = await this.fetch(`${this.baseUrl}${endpoint}`, {\n      method: \"POST\",\n      body,\n      headers: {\n        ...this.postHeader,\n        ...header,\n      },\n    });\n    handleError(response);\n    let data = null;\n    try {\n      data = await response.json();\n    } catch (_err) {\n      return {\n        response,\n        data,\n        endpoint,\n      };\n    }\n    return {\n      response,\n      data,\n      endpoint,\n    };\n  }\n\n  /**\n   * Using Fetch to send DELETE request\n   */\n  async deleteReq<T>(\n    endpoint: string,\n    header: ServerRequestHeader = {}\n  ): APIResponse<T> {\n    const response = await timeoutWrapper(\n      this.timeout,\n      this.fetch(`${this.baseUrl}${endpoint}`, {\n        method: \"DELETE\",\n        headers: {\n          ...this.getHeader,\n          ...header,\n        },\n      })\n    );\n    handleError(response);\n    let data = null;\n    try {\n      data = await response.json();\n    } catch (_err) {\n      return {\n        response,\n        data,\n        endpoint,\n      };\n    }\n    return {\n      response,\n      data,\n      endpoint,\n    };\n  }\n\n  /**\n   * Using Fetch to send PUT request\n   */\n  async putReq<T>(\n    endpoint: string,\n    body: any,\n    header: ServerRequestHeader = {}\n  ): APIResponse<T> {\n    const response = await this.fetch(`${this.baseUrl}${endpoint}`, {\n      method: \"PUT\",\n      body,\n      headers: {\n        ...this.postHeader,\n        ...header,\n      },\n    });\n    handleError(response);\n    let data = null;\n    try {\n      data = await response.json();\n    } catch (_err) {\n      return {\n        response,\n        data,\n        endpoint,\n      };\n    }\n    return {\n      response,\n      data,\n      endpoint,\n    };\n  }\n\n  // API CALL\n\n  /**\n   * Check API server status\n   * https://api.coingecko.com/api/v3/ping\n   */\n  async getPing(): ServerResponse<boolean> {\n    const d = await this.getReq<IPing>(\"/ping\");\n    return {\n      ...d,\n      data: d.data.gecko_says === \"(V3) To the Moon!\",\n    };\n  }\n\n  /**\n   * Get the current price of any cryptocurrencies in any other supported currencies that you need.\n   * https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\n   */\n  getSimplePrice(\n    ids: string[],\n    vsCurrencies: string[]\n  ): ServerResponse<ISimplePrice> {\n    const encodedUrl = urlEncode({ ids, vs_currencies: vsCurrencies });\n    return this.getReq<ISimplePrice>(`/simple/price?${encodedUrl}`);\n  }\n\n  // TODO: /simple/token_price/{id} Get current price of tokens (using contract addresses) for a given platform in any other currency that you need.\n\n  /**\n   * Get list of supported_vs_currencies.\n   * https://api.coingecko.com/api/v3/simple/supported_vs_currencies\n   */\n  getSimpleSupportedVsCurrencies(): ServerResponse<\n    ISimpleSupportedVsCurrencies\n  > {\n    return this.getReq<ISimpleSupportedVsCurrencies>(\n      \"/simple/supported_vs_currencies\"\n    );\n  }\n\n  /**\n   * List all supported coins id, name and symbol (no pagination required)\n   * https://api.coingecko.com/api/v3/coins/list\n   */\n  getCoinsList(): ServerResponse<ICoinsList> {\n    return this.getReq<ICoinsList>(\"/coins/list\");\n  }\n\n  // GET /coins/markets List all supported coins price, market cap, volume, and market related data\n\n  getCoinsMarket(\n    vsCurrency: string,\n    order: CoinsMarketsSortOrder = CoinsMarketsSortOrder.MARKET_CAP_DESC,\n    ids: string[] = [],\n    perPage = 100,\n    page = 1,\n    sparkline = false,\n    priceChangePercentage: PriceChangePercentage[] = []\n  ) {\n    if (\n      perPage &&\n      typeof perPage === \"number\" &&\n      (perPage > 250 || perPage < 1)\n    ) {\n      throw new Error(\"Invalid per page, it should be within 1 to 250.\");\n    }\n    const encodedUrl = urlEncode({\n      vs_currency: vsCurrency,\n      order,\n      ids: ids.join(\",\"),\n      per_page: perPage,\n      page,\n      sparkline,\n      price_change_percentage: priceChangePercentage.join(\",\"),\n    });\n    return this.getReq<ICoinsMarket>(`/coins/markets?${encodedUrl}`);\n  }\n\n  /**\n   * Get current data (name, price, market, ... including exchange tickers) for a coin\n   * https://api.coingecko.com/api/v3/coins/bitcoin\n   */\n  getCoinsId(\n    coin: string,\n    localization = true,\n    tickers = true,\n    marketData = true,\n    communityData = true,\n    developerData = true,\n    sparkline = false,\n    include_exchange_logo = false\n  ): ServerResponse<ICoinsId> {\n    const encodedUrl = urlEncode({\n      localization,\n      tickers,\n      market_data: marketData,\n      community_data: communityData,\n      developer_data: developerData,\n      sparkline,\n      include_exchange_logo,\n    });\n    return this.getReq<ICoinsId>(`/coins/${coin}?${encodedUrl}`);\n  }\n\n  getCoinsIdTickers(\n    id: string,\n    includeExchangeLogo = true,\n    page = 1,\n    order = TickerSortOrder.TRUST_SCORE_DESC,\n    exchangesIds: string[] = []\n  ) {\n    const encodedUrl = urlEncode({\n      include_exchange_logo: includeExchangeLogo,\n      page,\n      order,\n      exchanges_ids: exchangesIds.join(\",\"),\n    });\n    return this.getReq<ICoinTickers>(`/coins/${id}/tickers?${encodedUrl}`);\n  }\n\n  /**\n   * Get market chart of a certain coin (prices, market cap and volume)\n   * https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=2\n   */\n  getCoinsIdMarketChart(\n    coin: string,\n    vsCurrency: string,\n    days: number | string\n  ): ServerResponse<ICoinsIdMarketChart> {\n    const encodedUrl = urlEncode({\n      vs_currency: vsCurrency,\n      days,\n    });\n    return this.getReq<ICoinsIdMarketChart>(\n      `/coins/${coin}/market_chart?${encodedUrl}`\n    );\n  }\n\n  /**\n   * Get status updates for a given coin\n   * https://api.coingecko.com/api/v3/coins/dash/status_updates?page=1&per_page=2\n   */\n  getCoinsIdStatusUpdates(\n    coin: string,\n    page: number,\n    perPage = 10\n  ): ServerResponse<ICoinIdStatusUpdates> {\n    const encodedUrl = urlEncode({\n      per_page: perPage,\n      page,\n    });\n    return this.getReq<ICoinIdStatusUpdates>(\n      `/coins/${coin}/status_updates?${encodedUrl}`\n    );\n  }\n\n  /**\n   * List all the available category list\n   * https://api.coingecko.com/api/v3/coins/category_list\n   * @param locale\n   */\n  getCoinsCategoryList(locale = \"en\") {\n    const encodedUrl = urlEncode({\n      locale,\n    });\n    return this.getReq<{ category_id: string; name: string }[]>(\n      `/coins/category_list?${encodedUrl}`\n    );\n  }\n\n  getCoinsLite(\n    vsCurrency = \"usd\",\n    categoryId = \"cryptocurrency\",\n    locale = \"en\",\n    page = 1,\n    perPage = 20,\n    order = SortOrder.MARKET_CAP_DESCENDING\n  ) {\n    const encodedUrl = urlEncode({\n      vs_currency: vsCurrency,\n      category_id: categoryId,\n      locale,\n      page,\n      per_page: perPage,\n      order,\n    });\n    return this.getReq<ICoinsLite[]>(`/coins_lite?${encodedUrl}`);\n  }\n\n  /**\n   * List all exchanges\n   * https://api.coingecko.com/api/v3/exchanges\n   */\n  getExchanges(page = 1, perPage = 100) {\n    const encodedUrl = urlEncode({\n      per_page: perPage,\n      page,\n    });\n    return this.getReq<IExchanges[]>(`/exchanges?${encodedUrl}`);\n  }\n\n  /**\n   * List all supported markets id and name (no pagination required)\n   * https://api.coingecko.com/api/v3/exchanges/list\n   */\n  getExchangesList() {\n    return this.getReq<IExchangesListItem>(`/exchanges/list`);\n  }\n\n  /**\n   * Get exchange volume in BTC and tickers\n   * https://api.coingecko.com/api/v3/exchanges/binance\n   */\n  getExchangesId(id: string, tickers = true) {\n    const encodedUrl = urlEncode({\n      include_tickers: tickers,\n    });\n    return this.getReq<IExchangesId>(`/exchanges/${id}?${encodedUrl}`);\n  }\n\n  getExchangesIdTicker(\n    id: string,\n    coinIds: string[] = [],\n    exchangeLogo = true,\n    page = 0,\n    order: TickerSortOrder = TickerSortOrder.TRUST_SCORE_DESC\n  ) {\n    const encodedUrl = urlEncode({\n      coin_ids: coinIds.join(\",\"),\n      include_exchange_logo: exchangeLogo,\n      page,\n      order,\n    });\n    return this.getReq<IExchangesIdTicker>(\n      `/exchanges/${id}/tickers?${encodedUrl}`\n    );\n  }\n\n  /**\n   * Get volume_chart data for a given exchange\n   * https://api.coingecko.com/api/v3/exchanges/binance/volume_chart?days=1\n   */\n  getExchangesIdVolumeChart(id: string, days: number) {\n    return this.getReq<Array<[number, number]>>(\n      `/exchanges/${id}/volume_chart?days=${days}`\n    );\n  }\n\n  /**\n   * List all derivative tickers\n   * https://api.coingecko.com/api/v3/derivatives\n   */\n  getDerivatives() {\n    return this.getReq<IDerivatives[]>(`/derivatives`);\n  }\n\n  /**\n   * List all derivative exchanges\n   * https://api.coingecko.com/api/v3/derivatives/exchanges\n   */\n  getDerivativesExchanges(\n    order = DerivativesExchangesSortType.OPEN_INTEREST_BTC_DESC\n  ) {\n    const encodedUrl = urlEncode({ order });\n    return this.getReq<IDerivativesExchanges[]>(\n      `/derivatives/exchanges?${encodedUrl}`\n    );\n  }\n\n  /**\n   * Show derivative exchange data\n   * https://api.coingecko.com/api/v3/derivatives/exchanges?include_tickers=true\n   * @param {string} id Derivative Exchange ID\n   * @param {DerivativesExchangeTickerType} includeTickers (use DerivativesExchangeTickerType enum) \"all\" for all tickers, \"unexpired\" for unexpired tickers and \"\" to return no tickers\n   */\n  getDerivativesExchangesId(\n    id: string,\n    includeTickers = DerivativesExchangeTickerType.NONE\n  ) {\n    const encodedUrl =\n      includeTickers !== DerivativesExchangeTickerType.NONE\n        ? urlEncode({ include_tickers: includeTickers })\n        : \"\";\n    return this.getReq<IDerivativesExchangesId>(\n      `/derivatives/exchanges/${id}?${encodedUrl}`\n    );\n  }\n\n  /**\n   * BEAM\n   * List all status_updates with data (description, category, created_at, user, user_title and pin)\n   * https://api.coingecko.com/api/v3/status_updates\n   */\n  getStatusUpdates(\n    page: number,\n    category: BeamFilterCategories = BeamFilterCategories.ALL_CATEGORIES,\n    project: BeamFilterProjectType = BeamFilterProjectType.ALL,\n    perPage = 10\n  ): ServerResponse<IStatusUpdates> {\n    const encodedUrl = urlEncode({\n      page,\n      category,\n      project_type: project,\n      per_page: perPage,\n    });\n    return this.getReq<IStatusUpdates>(`/status_updates?${encodedUrl}`);\n  }\n\n  getExchangeRates(): ServerResponse<IExchangeRates> {\n    return this.getReq<IExchangeRates>(\"/exchange_rates\");\n  }\n\n  /**\n   * List all finance platforms\n   * https://api.coingecko.com/api/v3/finance_platforms\n   */\n  getFinancePlatforms(perPage = 100, page = 1) {\n    const encodedUrl = urlEncode({\n      per_page: perPage,\n      page,\n    });\n    return this.getReq<IFinancePlatform[]>(`/finance_platforms?${encodedUrl}`);\n  }\n\n  /**\n   * List all finance products\n   * https://api.coingecko.com/api/v3/finance_products\n   */\n  getFinanceProducts(perPage = 100, page = 1) {\n    const encodedUrl = urlEncode({\n      per_page: perPage,\n      page,\n    });\n    return this.getReq<IFinanceProduct[]>(`/finance_products?${encodedUrl}`);\n  }\n\n  /**\n   * Get cryptocurrency global data\n   * https://api.coingecko.com/api/v3/global\n   */\n  getGlobal(): ServerResponse<IGlobal> {\n    return this.getReq<IGlobal>(\"/global\");\n  }\n}\n","import { CGError } from \"../CGError\";\nimport { APIError } from \"../model/API\";\n\nexport function deprecated() {\n  return (\n    _target: Object,\n    propertyKey: string,\n    _propertyDescriptor: PropertyDescriptor\n  ) => {\n    console.warn(\n      \"this class is deprecated and will be removed in a future version of the app\\n\",\n      \"@: \",\n      propertyKey\n    );\n  };\n}\n"],"names":[],"mappings":"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"}